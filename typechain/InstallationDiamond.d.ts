/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface InstallationDiamondInterface extends ethers.utils.Interface {
  functions: {
    "getInstallationType(uint256)": FunctionFragment;
    "getInstallationTypes(uint256[])": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getInstallationType",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getInstallationTypes",
    values: [BigNumberish[]]
  ): string;

  decodeFunctionResult(
    functionFragment: "getInstallationType",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInstallationTypes",
    data: BytesLike
  ): Result;

  events: {};
}

export class InstallationDiamond extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: InstallationDiamondInterface;

  functions: {
    getInstallationType(
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          BigNumber,
          number,
          number,
          BigNumber,
          BigNumber,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          installationId: BigNumber;
          installationType: number;
          level: number;
          width: BigNumber;
          height: BigNumber;
          alchemicaType: number;
          fudCost: BigNumber;
          fomoCost: BigNumber;
          alphaCost: BigNumber;
          kekCost: BigNumber;
          craftTime: BigNumber;
        }
      ] & {
        installationType: [
          BigNumber,
          number,
          number,
          BigNumber,
          BigNumber,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          installationId: BigNumber;
          installationType: number;
          level: number;
          width: BigNumber;
          height: BigNumber;
          alchemicaType: number;
          fudCost: BigNumber;
          fomoCost: BigNumber;
          alphaCost: BigNumber;
          kekCost: BigNumber;
          craftTime: BigNumber;
        };
      }
    >;

    getInstallationTypes(
      _itemIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          BigNumber,
          number,
          number,
          BigNumber,
          BigNumber,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          installationId: BigNumber;
          installationType: number;
          level: number;
          width: BigNumber;
          height: BigNumber;
          alchemicaType: number;
          fudCost: BigNumber;
          fomoCost: BigNumber;
          alphaCost: BigNumber;
          kekCost: BigNumber;
          craftTime: BigNumber;
        })[]
      ] & {
        itemTypes_: ([
          BigNumber,
          number,
          number,
          BigNumber,
          BigNumber,
          number,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber,
          BigNumber
        ] & {
          installationId: BigNumber;
          installationType: number;
          level: number;
          width: BigNumber;
          height: BigNumber;
          alchemicaType: number;
          fudCost: BigNumber;
          fomoCost: BigNumber;
          alphaCost: BigNumber;
          kekCost: BigNumber;
          craftTime: BigNumber;
        })[];
      }
    >;
  };

  getInstallationType(
    _itemId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      BigNumber,
      number,
      number,
      BigNumber,
      BigNumber,
      number,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ] & {
      installationId: BigNumber;
      installationType: number;
      level: number;
      width: BigNumber;
      height: BigNumber;
      alchemicaType: number;
      fudCost: BigNumber;
      fomoCost: BigNumber;
      alphaCost: BigNumber;
      kekCost: BigNumber;
      craftTime: BigNumber;
    }
  >;

  getInstallationTypes(
    _itemIds: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<
    ([
      BigNumber,
      number,
      number,
      BigNumber,
      BigNumber,
      number,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber
    ] & {
      installationId: BigNumber;
      installationType: number;
      level: number;
      width: BigNumber;
      height: BigNumber;
      alchemicaType: number;
      fudCost: BigNumber;
      fomoCost: BigNumber;
      alphaCost: BigNumber;
      kekCost: BigNumber;
      craftTime: BigNumber;
    })[]
  >;

  callStatic: {
    getInstallationType(
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        number,
        number,
        BigNumber,
        BigNumber,
        number,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        installationId: BigNumber;
        installationType: number;
        level: number;
        width: BigNumber;
        height: BigNumber;
        alchemicaType: number;
        fudCost: BigNumber;
        fomoCost: BigNumber;
        alphaCost: BigNumber;
        kekCost: BigNumber;
        craftTime: BigNumber;
      }
    >;

    getInstallationTypes(
      _itemIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<
      ([
        BigNumber,
        number,
        number,
        BigNumber,
        BigNumber,
        number,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber
      ] & {
        installationId: BigNumber;
        installationType: number;
        level: number;
        width: BigNumber;
        height: BigNumber;
        alchemicaType: number;
        fudCost: BigNumber;
        fomoCost: BigNumber;
        alphaCost: BigNumber;
        kekCost: BigNumber;
        craftTime: BigNumber;
      })[]
    >;
  };

  filters: {};

  estimateGas: {
    getInstallationType(
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getInstallationTypes(
      _itemIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getInstallationType(
      _itemId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getInstallationTypes(
      _itemIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
