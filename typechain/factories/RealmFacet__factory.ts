/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RealmFacet, RealmFacetInterface } from "../RealmFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint32[]",
        name: "_tokenIds",
        type: "uint32[]",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "coordinateX",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "coordinateY",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "parcelId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "size",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fomoBoost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fudBoost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "kekBoost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "alphaBoost",
            type: "uint256",
          },
        ],
        internalType: "struct RealmFacet.MintParcelInput[]",
        name: "_metadata",
        type: "tuple[]",
      },
    ],
    name: "mintParcels",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061072e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806387d2e51614610030575b600080fd5b61004361003e3660046105b2565b610045565b005b61004d6101d7565b60005b828110156101d057600084848381811061006c5761006c61066b565b90506020020160208101906100819190610681565b905060008383815181106100975761009761066b565b60200260200101519050835186869050146100f95760405162461bcd60e51b815260206004820152601a60248201527f496e70757473206d7573742062652073616d65206c656e67746800000000000060448201526064015b60405180910390fd5b63ffffffff808316600090815260076020908152604080832080548651878501518716600160c01b0263ffffffff60c01b1991909716600160a01b026001600160c01b03199092166001600160a01b038f1617919091171694909417845584810151600180860191909155606086015160028087019190915560a087015185805261200387019094528285209390935560808601519084528184205560e08501519183528083209190915560c0840151600383529120556101ba8884610260565b50505080806101c8906106b9565b915050610050565b5050505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b0316331461025e5760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b60648201526084016100f0565b565b63ffffffff81166000908152600460205260408120546001600160a01b0316156102cc5760405162461bcd60e51b815260206004820152601e60248201527f4552433732313a20746f6b656e496420616c7265616479206d696e746564000060448201526064016100f0565b63ffffffff808316600081815260048085016020908152604080842080546001600160a01b038b166001600160a01b03199091168117909155875460028901845282862081905560018181018a55898752848720600880840490910180546007948516890261010090810a808d02908e02199092169190911790915584895260068c018752858920805460058e018952878b208c8c528952878b208190559384018155895286892091830490910180549290931690960290950a96870296909702199093169490941790945581526003840190925281208054916103af836106b9565b909155505060405163ffffffff8316906001600160a01b038516907f1661e9eb70c35142fbb4190fa06d962636cf9ccd88dd913f90c08bcbf0d43e9190600090a360405163ffffffff8316906001600160a01b038516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4816101d0816106d4565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff8111828210171561047257610472610438565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156104a1576104a1610438565b604052919050565b803563ffffffff811681146104bd57600080fd5b919050565b600082601f8301126104d357600080fd5b8135602067ffffffffffffffff8211156104ef576104ef610438565b6104fd818360051b01610478565b82815260089290921b8401810191818101908684111561051c57600080fd5b8286015b848110156105a757610100818903121561053a5760008081fd5b61054261044e565b61054b826104a9565b81526105588583016104a9565b8186015260408281013590820152606080830135908201526080808301359082015260a0808301359082015260c0808301359082015260e0808301359082015283529183019161010001610520565b509695505050505050565b600080600080606085870312156105c857600080fd5b84356001600160a01b03811681146105df57600080fd5b9350602085013567ffffffffffffffff808211156105fc57600080fd5b818701915087601f83011261061057600080fd5b81358181111561061f57600080fd5b8860208260051b850101111561063457600080fd5b60208301955080945050604087013591508082111561065257600080fd5b5061065f878288016104c2565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561069357600080fd5b61069c826104a9565b9392505050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156106cd576106cd6106a3565b5060010190565b600063ffffffff808316818114156106ee576106ee6106a3565b600101939250505056fea2646970667358221220eadfc9866794b78519db6431dc176484daa17508ce307f35d5195375ebb4558a64736f6c63430008090033";

export class RealmFacet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RealmFacet> {
    return super.deploy(overrides || {}) as Promise<RealmFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RealmFacet {
    return super.attach(address) as RealmFacet;
  }
  connect(signer: Signer): RealmFacet__factory {
    return super.connect(signer) as RealmFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RealmFacetInterface {
    return new utils.Interface(_abi) as RealmFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RealmFacet {
    return new Contract(address, _abi, signerOrProvider) as RealmFacet;
  }
}
